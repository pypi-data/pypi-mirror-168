Metadata-Version: 2.1
Name: numalogic
Version: 0.2.3
Summary: Collection of operational Machine Learning models and tools.
License: Apache-2.0
Author: Numalogic Developers
Maintainer: Avik Basu
Maintainer-email: avikbasu93@gmail.com
Requires-Python: >=3.8,<3.11
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: mlflow-skinny (>=1.27.0,<2.0.0)
Requires-Dist: numpy (>=1.23.1,<2.0.0)
Requires-Dist: pandas (>=1.4.3,<2.0.0)
Requires-Dist: pytz (>=2022.1,<2023.0)
Requires-Dist: scikit-learn (>=1.0,<2.0)
Requires-Dist: torch (>=1.12.0,<2.0.0)
Requires-Dist: torchinfo (>=1.6.0,<2.0.0)
Description-Content-Type: text/markdown

# numalogic

[![Build](https://github.com/numaproj/numalogic/actions/workflows/ci.yml/badge.svg)](https://github.com/numaproj/numalogic/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/numaproj/numalogic/branch/main/graph/badge.svg?token=020HF97A32)](https://codecov.io/gh/numaproj/numalogic)
[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)


Numalogic is a collection of operational ML models and tools.


## Installation

```shell
pip install numalogic
```


## Develop locally

1. Install Poetry:
    ```
    curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
    ```
2. To activate virtual env:
    ```
    poetry shell
    ```
3. To install all dependencies: ( listed on pyproject.toml)
   ```
   make setup
   ```
4. To install dependencies:
    ```
    poetry install
    ```
5. To run tests with coverage:
    ```
    make test
    ```
6. To format code style using black:
    ```
    make format
    ```

