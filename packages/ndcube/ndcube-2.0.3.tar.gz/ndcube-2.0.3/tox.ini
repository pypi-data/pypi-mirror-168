[tox]
envlist =
    py{37,38,39,310}{,-devdeps,-online,-figure,-conda,-oldestdeps}
    build_docs
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# We use bash in some of our environments so we have to whitelist it.
whitelist_externals=
    /bin/bash
    /usr/bin/bash
# Run the tests in a temporary directory to make sure that we don't import ndcube from the source tree
changedir = .tmp/{envname}
# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    online: that require remote data (as well as the offline ones)
    figure: runs the figure test suite.
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest -vvv -s -raR --pyargs ndcube --cov-report=xml --cov=ndcube --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    PARFIVE_HIDE_PROGESS = True
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scipy-wheels-nightly/simple
passenv =
    HTTP_PROXY
    HTTPS_PROXY
    NO_PROXY
    CIRCLECI
deps =
    # To avoid warnings we only test with 0.8.
    # We only support <0.9
    reproject<0.9

    # The devdeps factor is intended to be used to install the latest developer version.
    # of key dependencies.
    # Astropy is installed from the nightly wheels
    devdeps: astropy>=0.0dev0
    devdeps: matplotlib>=0.0dev0
    devdeps: git+https://github.com/sunpy/sunpy
    devdeps: git+https://github.com/sunpy/mpl-animators
    devdeps: git+https://github.com/spacetelescope/gwcs

    # These are specific online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout

    # Oldest Dependancies
    oldestdeps: sunpy<3.1
    oldestdeps: astropy<4.3
    oldestdeps: gwcs<0.16
    oldestdeps: numpy<1.18
    oldestdeps: matplotlib<3.3
    oldestdeps: mpl_animators<1.1
    oldestdeps: reproject==0.7.1

    # Figure tests need a tightly controlled environment
    # These are the oldestdeps which have py310 wheels as running multiple
    # versions of Python on circleci is a little annoying.
    # Newer versions are covered by devdeps
    figure-!devdeps: matplotlib==3.5.3
    figure-!devdeps: astropy==5.0.4
    figure-!devdeps: mpl-animators==1.0.0
    # For some reason gwcs 0.18.2 bumped astropy to 5.1 min
    figure-!devdeps: gwcs<0.18.2
extras =
    all
    tests
commands =
    !online-!hypothesis-!figure: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --reruns 2 --reruns-delay 15 --timeout=180 --remote-data=any {posargs}
    figure: /bin/bash -c "mkdir -p ./figure_test_images; python -c 'import matplotlib as mpl; print(mpl.ft2font.__file__, mpl.ft2font.__freetype_version__, mpl.ft2font.__freetype_build_type__)' > ./figure_test_images/figure_version_info.txt"
    figure: /bin/bash -c "pip freeze >> ./figure_test_images/figure_version_info.txt"
    figure: /bin/bash -c "cat ./figure_test_images/figure_version_info.txt"
    figure: python -c "import ndcube.tests.helpers as h; print(h.get_hash_library_name())"
    figure: {env:PYTEST_COMMAND} -m "mpl_image_compare" --mpl --remote-data=any --mpl-generate-summary=html --mpl-baseline-path=https://raw.githubusercontent.com/sunpy/sunpy-figure-tests/ndcube-main/figures/{envname}/ {posargs}

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
# Be verbose about the extras rather than using dev for clarity
extras =
  all
  docs
commands =
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure

# This env requires tox-conda.
[testenv:conda]
pypi_filter =
extras =
deps =
conda_deps =
    astropy
    matplotlib
    gwcs
    sunpy
conda_channels = conda-forge
install_command = pip install --no-deps {opts} {packages}
commands =
    conda list
    {env:PYTEST_COMMAND} {posargs}
