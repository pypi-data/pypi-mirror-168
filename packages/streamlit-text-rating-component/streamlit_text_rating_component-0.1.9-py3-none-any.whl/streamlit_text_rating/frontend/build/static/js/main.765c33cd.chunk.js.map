{"version":3,"sources":["CustomTextRating.tsx","index.tsx"],"names":["streamlit_text_rating","state","hasClickedLike","hasClickedDislike","render","props","theme","text","args","color_text","color_background","font_size","font_family","font_weight","style","display","alignItems","justifyContent","width","margin","color","background","fontSize","fontWeight","marginBottom","fontFamily","padding","borderRadius","IconButton","onClick","onClickedLike","outline","paddingTop","paddingBottom","onClickedDislike","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","CustomTextRating","document","getElementById"],"mappings":"oSAkBMA,E,4MACGC,MAAQ,CAACC,gBAAgB,EAAMC,mBAAmB,G,EAElDC,OAAS,WAKI,EAAKC,MAAfC,MAAR,IAGMC,EAAO,EAAKF,MAAMG,KAAX,KACPC,EAAa,EAAKJ,MAAMG,KAAX,WACbE,EAAmB,EAAKL,MAAMG,KAAX,iBACnBG,EAAY,EAAKN,MAAMG,KAAX,UACZI,EAAc,EAAKP,MAAMG,KAAX,YACdK,EAAY,EAAKR,MAAMG,KAAX,YAElB,OACM,yBAAKM,MAAO,CAACC,QAAQ,OAAQC,WAAW,SAAUC,eAAe,aAAaC,MAAM,OAAOC,OAAO,QAClG,uBACAL,MAAO,CAACM,MAAMX,EACdY,WAAWX,EACXY,SAASX,EACTY,WAAWV,EACXW,aAAa,MACbC,WAAWb,EACXc,QAAQ,OACRC,aAAa,QACZpB,GAEC,kBAACqB,EAAA,EAAD,CAAYC,QAAS,EAAKC,cAAehB,MAAO,CAACiB,QAAQ,OAAOC,WAAW,MAAMC,cAAc,QAC7F,kBAAC,IAAD,CAAab,MAAO,EAAKnB,MAAMC,eAAe,UAAU,cAG1D,kBAAC0B,EAAA,EAAD,CAAYC,QAAS,EAAKK,iBAAkBpB,MAAO,CAACiB,QAAQ,OAAOC,WAAW,MAAMC,cAAc,QAChG,kBAAC,IAAD,CAAeb,MAAO,EAAKnB,MAAME,kBAAkB,QAAQ,gB,EAM/D2B,cAAgB,WACtB,EAAKK,UACD,SAAAC,GAAS,MAAK,CAAClC,gBAAkB,EAAKD,MAAMC,mBAC9C,WAAW,EAAKD,MAAMC,eAAiBmC,IAAUC,kBAAkB,SAAiBD,IAAUC,kBAAkB,WAE/G,EAAKH,UACJ,SAAAC,GAAS,MAAK,CAACjC,mBAAmB,O,EAIhC+B,iBAAmB,WACzB,EAAKC,UACD,SAAAC,GAAS,MAAK,CAACjC,mBAAqB,EAAKF,MAAME,sBACjD,WAAW,EAAKF,MAAME,kBAAoBkC,IAAUC,kBAAkB,YAAoBD,IAAUC,kBAAkB,WAErH,EAAKH,UACJ,SAAAC,GAAS,MAAK,CAAClC,gBAAgB,O,YA1DHqC,KA+DrBC,cAAwBxC,GC7EvCyC,IAASrC,OACP,kBAAC,IAAMsC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.765c33cd.chunk.js","sourcesContent":["import { BaseProvider, LightTheme } from \"baseui\"\nimport React from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\n\nimport {\n  withStreamlitConnection,\n  StreamlitComponentBase,\n  Streamlit,\n} from \"streamlit-component-lib\"\n\n\ninterface State {\n hasClickedLike: boolean,\n hasClickedDislike: boolean,\n}\n\nclass streamlit_text_rating extends StreamlitComponentBase<State> {\n  public state = {hasClickedLike: false,hasClickedDislike: false}\n\n  public render = (): React.ReactNode => {\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n\n    const text = this.props.args[\"text\"] as string\n    const color_text = this.props.args[\"color_text\"] as string\n    const color_background = this.props.args[\"color_background\"] as string\n    const font_size = this.props.args['font_size'] as string\n    const font_family = this.props.args['font_family'] as string\n    const font_weight=this.props.args['font_weight'] as number\n\n    return (\n          <div style={{display:'flex', alignItems:'center', justifyContent:'flex-start',width:'100%',margin:'0px',}}>\n          <p\n          style={{color:color_text,\n          background:color_background,\n          fontSize:font_size,\n          fontWeight:font_weight,\n          marginBottom:'0px',\n          fontFamily:font_family,\n          padding:'-6px',\n          borderRadius:'6px',}}>\n          {text}\n          </p>\n            <IconButton onClick={this.onClickedLike} style={{outline:'none',paddingTop:'0px',paddingBottom:'0px'}}>\n              <ThumbUpIcon color={this.state.hasClickedLike?'success':'disabled'}/>\n            </IconButton>\n\n            <IconButton onClick={this.onClickedDislike} style={{outline:'none',paddingTop:'0px',paddingBottom:'0px'}} >\n              <ThumbDownIcon color={this.state.hasClickedDislike?'error':'disabled'}/>\n            </IconButton>\n          </div>\n    )\n  }\n\n  private onClickedLike = (): void => {\n    this.setState(\n        prevState => ({hasClickedLike: ! this.state.hasClickedLike}),\n      () => {if (this.state.hasClickedLike) {Streamlit.setComponentValue('liked');} else {Streamlit.setComponentValue('None');}}\n      );\n       this.setState(\n        prevState => ({hasClickedDislike: false})\n      );\n  }\n\n  private onClickedDislike = (): void => {\n    this.setState(\n        prevState => ({hasClickedDislike: ! this.state.hasClickedDislike}),\n      () => {if (this.state.hasClickedDislike) {Streamlit.setComponentValue('disliked');} else {Streamlit.setComponentValue('None');}}\n      );\n       this.setState(\n        prevState => ({hasClickedLike: false})\n      );\n    }\n}\n\nexport default withStreamlitConnection(streamlit_text_rating)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CustomTextRating from \"./CustomTextRating\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CustomTextRating/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}