[tool.poetry]
name = "bigeye-sdk"
version = "0.4.28"
description = "Bigeye SDK offers developer tools and clients to interact with Bigeye programmatically."
authors = ["Bigeye <support@bigeye.com>"]

readme = "README.md"

homepage = "https://docs.bigeye.com/docs"

[tool.poetry.dependencies]
# Should comply with https://raw.githubusercontent.com/apache/airflow/constraints-2.2.2/constraints-3.7.txt
# for compatibility with Airflow
python = "^3.7.2"
betterproto = '^1.2.5'
requests = '^2.28.1'
fuzzywuzzy = '^0.18.0'
PyYAML = '^6.0'
python-Levenshtein = '^0.12.2'
lz4 = '^4.0.1'
keyring = '23.2.1'
pycryptodomex = "3.11.0" # frozen for aws integration.
pydantic = '^1.10.2'
pydantic-yaml = '^0.8.0'
setuptools = '^59.6.0'
grpclib = '^0.4.2'
PyGithub = '1.54.1'
smart-open = '^6.1.0'
types-PyYAML = "^6.0.11"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests/"
]

[tool.poetry.group.dev.dependencies]
betterproto = {extras = ["compiler"], version = "^1.2.5"}
grpcio = "^1.48.1"
grpcio-tools = "^1.48.1"
poethepoet = "^0.16.2"
pylint = "^2.15.2"
mypy = "^0.971"
pytest = "^7.1.3"

[tool.poe.tasks]
    test = ["python_tests"]
    pre_build = ["clean", "protogen", "include_generated"]
    post_build = ["exclude_generated"]
    pre_install = ["protogen"]
    post_publish = ["clean"]

    [tool.poe.tasks.include_generated]
        help = "Includes generated code for the Poetry build.  Git excluded code is not included in Poetry Build"
        shell = """
        grep -v "bigeye-integrations/bigeye-sdk/python/bigeye_sdk/generated/" ../../.gitignore > tmpfile && mv -f tmpfile ../../.gitignore
        """

    [tool.poe.tasks.exclude_generated]
        help = "Excludes generated code in a way that is compatible with Poetry.  Poetry will ignore all code that is ignored with .gitignore"
        shell = """
        if ! grep -q 'bigeye-integrations/bigeye-sdk/python/bigeye_sdk/generated/' ../../.gitignore; then
        echo 'bigeye-integrations/bigeye-sdk/python/bigeye_sdk/generated/' >> ../../.gitignore;
        fi
        """

    [tool.poe.poetry_hooks]
        pre_build = "pre_build"
        post_build = "post_build"
        pre_install = "pre_install"

    [tool.poe.tasks.format]
        help = "Run black on the code base"
        cmd  = "black ."

        [tool.poe.tasks.clean]
        help = "Remove generated files"
        cmd  = """
        rm -rf .coverage
        rm -rf .mypy_cache
        rm -rf ./dist
        """

        [tool.poe.tasks.protogen]
        help = "Generate Bigeye protobuf classes for Python SDK."
        cmd  = "bash protogen.sh"

        [tool.poe.tasks.types]
        help = "Run the type checker"
        cmd  = "mypy bigeye_sdk --ignore-missing-imports"

        [tool.poe.tasks.lint]
        help = "Run the linter"
        cmd  = "pylint bigeye_sdk"

        [tool.poe.tasks.python_tests]
        help = "Run all tests"
        shell = """
        cd ../../tests
        PYTHONPATH=.:../bigeye-cli:../bigeye-aws:$PYTHONPATH pytest
        """

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"


