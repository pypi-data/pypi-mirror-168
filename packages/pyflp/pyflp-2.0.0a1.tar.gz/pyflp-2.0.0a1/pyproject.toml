[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyflp"
authors = [{ name = "demberto", email = "demberto@protonmail.com" }]
description = "FL Studio project file parser"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]
license = { text = "GPL-3.0" }
dependencies = ["bytesioex>=0.1.2", "colour>=0.1.5", 'typing_extensions>=4.3.0']
dynamic = ["version"]

[project.urls]
Source = "https://github.com/demberto/PyFLP"
Changelog = "https://github.com/demberto/PyFLP/blob/master/CHANGELOG.md"
Documentation = "https://pyflp.rtfd.io"
"Bug Tracker" = "https://github.com/demberto/PyFLP/issues"

[tool.coverage.run]
branch = true
parallel = true
omit = ["main.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",          # Have to re-enable the standard pragma
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
]
ignore_errors = true

[tool.isort]
profile = "black"

[tool.pylint.design]
max-parents = 8

[tool.pylint.format]
max-module-lines = 1200

[tool.pylint.MASTER]
jobs = 0 # Parallel execution

[tool.pylint.'MESSAGE CONTROL']
disable = [
  "docstring-first-line-empty",
  "empty-comment",
  "inherit-non-class",              # https://github.com/PyCQA/pylint/issues/3505#issuecomment-1246655178
  "inconsistent-return-statements",
  "invalid-name",
  "no-member",
  "redefined-builtin",
  "missing-class-docstring",
  "missing-function-docstring",
  "too-few-public-methods",
  "useless-parent-delegation",
  "while-used",
  "wrong-import-position",
]

[tool.pyright]
ignore = ["./venv"]
reportPrivateUsage = false
reportMissingTypeStubs = false
venvPath = "."
venv = "venv"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = "tests"

[tool.setuptools]
packages = ["pyflp"]

[tool.setuptools.dynamic]
version = { file = "VERSION" }

[tool.tbump]
github_url = "https://github.com/demberto/PyFLP/"

[tool.tbump.version]
current = "2.0.0a1"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (.
    (?P<extra>.+)
  )?
  '''

[tool.tbump.git]
message_template = "version: bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "VERSION"

[[tool.tbump.file]]
src = "docs/conf.py"
search = "release = \"{current_version}\""

[[tool.tbump.before_commit]]
name = "check changelog"
cmd = "git grep -q {new_version} CHANGELOG.md"
