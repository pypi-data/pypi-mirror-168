Metadata-Version: 2.1
Name: pyteslable
Version: 0.1.4
Summary: Python interface for connecting to Tesla vehicles directly using the BLE API
Home-page: https://github.com/kaedenbrinkman/PyTeslaBLE
Author: Kaeden Brinkman
Author-email: kaeden@kaedenb.org
License: BSD 2-clause
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Description-Content-Type: text/markdown

# PyTeslaBLE
Python library for communicating with Tesla vehicles directly using the BLE API

:bangbang: | WARNING: This library is not supported by Tesla, and it could break at any moment. It should be noted that this library stores private keys and other sensitive data unencrypted on your machine. I am not responsible for any (extremely unlikely) damage done to your car.
:---: | :---

## Usage
`pip install pyteslable`

```python
from pyteslable import BLE
tesla_ble = BLE("private_key.pem")

print("Scanning for vehicles...")
list = tesla_ble.scan()
print(list)

# Connect to a specific vehicle by BLE address
vehicle = list.getAddress("05:eb:6d:b7:f7:92")
vehicle.connect()
if not vehicle.isAdded():
  print("Tap your keycard on the center console")
  vehicle.whitelist()
# Now we are ready to send commands!
vehicle.unlock()
```

## Cryptography Library Modification
If you have the latest `cryptography` library, you will likely get an error about not supporting 4-bit nonces.
For now, the best solution I have is to simply modify the if statement that produces the error.

## Credits
Huge props to Lex Nastin for putting together some documentation for the Tesla BLE API. Check out the documentation [here](https://teslabtapi.lexnastin.com/).

Also many thanks to Kevin Dewald from Neuralink for the [BLE library](https://github.com/OpenBluetoothToolbox/SimpleBLE)!
