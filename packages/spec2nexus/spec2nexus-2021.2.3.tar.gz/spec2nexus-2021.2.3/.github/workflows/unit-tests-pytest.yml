name: Unit Tests

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash

jobs:

  # lint:
  #   name: Code style
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-python@v2

  #     - name: Install Dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8

  #     - name: Run flake8
  #       run: |
  #         flake8

  build-linux:
    name: Python ${{ matrix.python-version }}
    # needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2

    - name: Create Python ${{ matrix.python-version }} environment
      uses: mamba-org/provision-with-micromamba@main
      # use main branch to enable choice of channel-priority
      with:
        cache-env: true
        cache-env-key: env-key-${{ matrix.python-version }}
        channel-priority: flexible
        environment-file: environment.yml
        environment-name: anaconda-test-env-py-${{ matrix.python-version }}
        extra-specs: |
          coverage
          coveralls
          pytest
          pyyaml
          ruamel_yaml
          yaml
          setuptools-scm

    - name: Diagnostic
      run: |
        micromamba info
        micromamba list
        conda config --show-sources
        conda config --show
        micromamba env list
        printenv | sort

    - name: Run tests with pytest & coverage
      shell: bash -l {0}
      run: |
        # proceed as in hklpy
        coverage run --concurrency=thread --parallel-mode -m pytest -vvv .
        coverage combine
        coverage report --precision 3

    - name: Upload to coveralls
      # https://github.com/TheKevJames/coveralls-python
      shell: bash -l {0}
      run: |
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
