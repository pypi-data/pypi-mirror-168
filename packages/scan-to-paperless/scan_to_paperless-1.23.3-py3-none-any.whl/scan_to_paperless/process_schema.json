{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/camptocamp/tilecloud-chain/master/tilecloud_chain/schema.json",
  "type": "object",
  "title": "Configuration",
  "additionalProperties": false,
  "definitions": {
    "args": {
      "type": "object",
      "title": "Arguments",
      "properties": {
        "level": {
          "type": ["boolean", "integer"],
          "description": "true: => do level on 15% - 85% (under 15 % will be black above 85% will be white), false: => 0% - 100%, <number>: => (0 + <number>)% - (100 - number)%"
        },
        "auto_level": {
          "type": "boolean",
          "description": "If no level specified, do auto level",
          "default": false
        },
        "min_level": {
          "type": "number",
          "description": "Min level if no level end no auto-level",
          "default": 15
        },
        "max_level": {
          "type": "number",
          "description": "Max level if no level end no auto-level",
          "default": 15
        },
        "no_crop": {
          "type": "boolean",
          "default": false,
          "description": "Don't do any crop"
        },
        "margin_horizontal": {
          "type": "number",
          "default": 9,
          "description": "The horizontal margin used on auto-detect content [mm]"
        },
        "margin_vertical": {
          "type": "number",
          "default": 6,
          "description": "The vertical margin used on auto-detect content [mm]"
        },
        "dpi": {
          "type": "number",
          "default": 300,
          "description": "The DPI used to convert the mm to pixel"
        },
        "sharpen": {
          "type": "boolean",
          "default": false,
          "description": "Do the sharpen"
        },
        "dither": {
          "type": "boolean",
          "default": false,
          "description": "Do the dither"
        },
        "tesseract": {
          "type": "boolean",
          "default": false,
          "description": "Use tesseract to to an OCR on the document"
        },
        "tesseract_lang": {
          "type": "string",
          "default": "fra+eng",
          "description": "The used language for tesseract"
        },
        "append_credit_card": {
          "type": "boolean",
          "default": false,
          "description": "Do an assisted split"
        },
        "assisted_split": {
          "type": "boolean",
          "default": false,
          "description": "Do an assisted split"
        },
        "num_angles": {
          "type": "integer",
          "default": 1800,
          "description": "The number of angle used to detect the image skew"
        },
        "min_box_size_crop": {
          "type": "number",
          "default": 3,
          "description": "The minimum box size to find the content on witch one we will crop [mm]"
        },
        "min_box_black_crop": {
          "type": "number",
          "default": 2,
          "description": "The minimum black in a box on content find on witch one we will crop [%]"
        },
        "contour_kernel_size_crop": {
          "type": "number",
          "default": 1.5,
          "description": "The block size used in a box on content find on witch one we will crop [mm]"
        },
        "threshold_block_size_crop": {
          "type": "number",
          "default": 1.5,
          "description": "The block size used in a box on threshold for content find on witch one we will crop [mm]"
        },
        "threshold_value_c_crop": {
          "type": "number",
          "default": 70,
          "description": "A variable used on threshold, should be low on low contrast image, used in a box on content find on witch one we will crop"
        },
        "min_box_size_empty": {
          "type": "number",
          "default": 10,
          "description": "The minimum box size to find the content to determine if the page is empty [mm]"
        },
        "min_box_black_empty": {
          "type": "number",
          "default": 2,
          "description": "The minimum black in a box on content find if the page is empty [%]"
        },
        "contour_kernel_size_empty": {
          "type": "number",
          "default": 1.5,
          "description": "The block size used in a box on content find if the page is empty [mm]"
        },
        "threshold_block_size_empty": {
          "type": "number",
          "default": 1.5,
          "description": "The block size used in a box on threshold for content find if the page is empty [mm]"
        },
        "threshold_value_c_empty": {
          "type": "number",
          "default": 70,
          "description": "A variable used on threshold, should be low on low contrast image, used in a box on content find if the page is empty"
        },
        "min_box_size_limit": {
          "type": "number",
          "default": 3,
          "description": "The minimum box size to find the limits based on content [mm]"
        },
        "min_box_black_limit": {
          "type": "number",
          "default": 2,
          "description": "The minimum black in a box on content find the limits based on content [%]"
        },
        "contour_kernel_size_limit": {
          "type": "number",
          "default": 1.5,
          "description": "The block size used in a box on content find the limits based on content [mm]"
        },
        "threshold_block_size_limit": {
          "type": "number",
          "default": 1.5,
          "description": "The block size used in a box on threshold for content find the limits based on content [mm]"
        },
        "threshold_value_c_limit": {
          "type": "number",
          "default": 70,
          "description": "A variable used on threshold, should be low on low contrast image, used in a box on content find the limits based on content"
        }
      }
    }
  },
  "properties": {
    "images": {
      "type": "array",
      "items": { "type": "string" },
      "description": "The images"
    },
    "destination": {
      "type": "string",
      "description": "The destination file name"
    },
    "args": {
      "$ref": "#/definitions/args"
    },
    "progress": {
      "type": "boolean",
      "description": "Run in progress mode",
      "default": false
    },
    "experimental": {
      "type": "boolean",
      "description": "Run the experimental features",
      "default": false
    },
    "steps": {
      "type": "array",
      "description": "The carried out steps description",
      "items": {
        "type": "object",
        "title": "Step",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The step name"
          },
          "sources": {
            "type": "array",
            "description": "The images obtain after the current step",
            "items": { "type": "string" }
          },
          "process_count": {
            "type": "integer",
            "description": "The step number"
          }
        }
      }
    },
    "assisted_split": {
      "type": "array",
      "items": {
        "title": "Assisted split",

        "type": "object",
        "additionalProperties": false,
        "description": "Assisted split configuration",
        "properties": {
          "source": {
            "type": "string",
            "title": "The source image name"
          },
          "destinations": {
            "type": "array",
            "title": "The destination image positions",
            "items": {
              "type": ["integer", "string"]
            }
          },
          "image": {
            "type": "string",
            "title": "The enhanced image name"
          },
          "limits": {
            "type": "array",
            "description": "The (proposed) limits to do the assisted split, You should keep only the right one",
            "items": {
              "type": "object",
              "title": "Limit",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name visible on the generated image"
                },
                "type": {
                  "type": "string",
                  "description": "The kind of split"
                },
                "value": {
                  "type": "integer",
                  "description": "The split position"
                },
                "vertical": {
                  "type": "boolean",
                  "description": "Is vertical?"
                },
                "margin": {
                  "type": "integer",
                  "description": "The margin around the split, can be used to remove a fold"
                }
              }
            }
          }
        }
      }
    },
    "transformed_images": {
      "type": "array",
      "description": "The transformed image, if removed the jobs will rag again from start",
      "items": {
        "type": "string"
      }
    },
    "intermediate_error": {
      "type": "array",
      "description": "The ignored errors",
      "items": {
        "type": "object",
        "title": "Intermediate error",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string"
          },
          "traceback": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "images_config": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "angle": {
            "type": ["number", "null"],
            "description": "The used angle to deskew, can be change, restart by deleting one of the generated images"
          },
          "status": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "angle": {
                "type": "number",
                "description": "The measured deskew angle"
              },
              "average_deviation": {
                "type": "number",
                "description": "The measured deskew angle deviation"
              },
              "average_deviation2": {
                "type": "number",
                "description": "The measured deskew angle deviation, corrected"
              },
              "angles": {
                "type": "array",
                "description": "The measured possible deskew angles, visible on the generated image",
                "items": {
                  "type": "number"
                }
              },
              "size": {
                "type": "array",
                "description": "The image dimensions",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    }
  },
  "required": ["images", "destination", "args"]
}
