Metadata-Version: 2.1
Name: sphinx-expose-init-alias
Version: 0.1.1
Project-URL: Documentation, https://github.com/cmsxbc/sphinx-expose-init-alias#readme
Project-URL: Issues, https://github.com/cmsxbc/sphinx-expose-init-alias/issues
Project-URL: Source, https://github.com/cmsxbc/sphinx-expose-init-alias
Author-email: cmsxbc <i@cmsis.me>
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.7
Requires-Dist: sphinx>=5.1.1
Description-Content-Type: text/markdown

# sphinx-expose-init-alias
Generate doc of exposed stuff in \_\_init\_\_.py  as alias

## What-Is-Wanted

We sometimes do "re-expose" in `__init__.py` to improve experience of using our library.
Such as

```Python
# lib/a.py

def foo():
  ...

# lib/__init__.py

from .a import foo


```

But the `foo` in `lib/__init__.py` will only occur in docs when use `sphinx.ext.autodoc` if we put it in the `__all__` in `lib/__init__.py`.
And wrose thing is that the content is just like a stuff defined in `lib/__init__.py`, which is a bit confused and duplicated.


## Usage

```reStructuredText
# docs/lib.rst

.. autoaliasmodule:: lib
  :members:

```
