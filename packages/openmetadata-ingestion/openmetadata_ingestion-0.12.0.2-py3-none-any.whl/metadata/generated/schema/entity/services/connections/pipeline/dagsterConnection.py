# generated by datamodel-codegen:
#   filename:  entity/services/connections/pipeline/dagsterConnection.json
#   timestamp: 2022-09-21T06:42:59+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional, Union

from pydantic import AnyUrl, BaseModel, Extra, Field

from .. import connectionBasicType
from ..database import mysqlConnection, postgresConnection, sqliteConnection


class DagsterType(Enum):
    Dagster = 'Dagster'


class DagsterConnection(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Optional[DagsterType] = Field(
        DagsterType.Dagster, description='Service Type', title='Service Type'
    )
    hostPort: AnyUrl = Field(
        ..., description='Pipeline Service Management/UI URI.', title='Host And Port'
    )
    numberOfStatus: Optional[int] = Field(
        '10', description='Pipeline Service Number Of Status'
    )
    dbConnection: Union[
        mysqlConnection.MysqlConnection,
        postgresConnection.PostgresConnection,
        sqliteConnection.SQLiteConnection,
    ] = Field(
        ...,
        description='Underlying database connection. See https://docs.dagster.io/getting-started for supported backends.',
        title='Metadata Database Connection',
    )
    supportsMetadataExtraction: Optional[
        connectionBasicType.SupportsMetadataExtraction
    ] = Field(None, title='Supports Metadata Extraction')
