Methodology
============
**Copper** generates sets of performance curves by modifying a set of "seed" or "base" curves to match the user-specified targeted equipment efficiencies, at full and part load. The seed set of curves can be provided by a user or generated by **Copper**. **Copper** can generate a generic set of performance curves for an equipment definition by aggregating exisiting performance curves stored in the data libraries.

Aggregation
------------
**Copper** allows users to choose between four different type of aggregations: `average`, `median`, `weighted average`, and `nearest neighbor weighted average`. These all follow the same approach, only step 3 below differs. 

    1. A set of sets of curves is selected from the dataset (all or a subset based on the method)
    2. Curve outputs are calculated for a large grid of independent variables
    3. Outputs are aggregated

      * `average`: Averaged curve output for each independent variables
      * `median`: Median curve output for each independent variables
      * `weighted average`: Same as average but a score is associated to each curve (the higher score, the best it matches the user specified equipment characteritics)
      * `nearest neighbor weighted average`: Same as weighted average but for a selected number of curves that best match the user specified equipment characteristics

    4. OLS regression is performed using the aggregated outputs
    5. Curve is normalized at rated/reference conditions

Curve Generation
-----------------
A genetic algorithm is used to obtain a set of curves that matches the user-specified efficiencies. An initial population is generated based on the seed set of curves. The fitness of each individual is evaluated in terms of how close the set of curves along with the other equipment characteristics are to the targeted full and part load efficiency. New generation of population are created using the sets of curves with the best fitness. The process is repeated until a satisfactory set of curves is found.