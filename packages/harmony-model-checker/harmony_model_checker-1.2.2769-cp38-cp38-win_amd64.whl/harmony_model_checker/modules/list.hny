# return s[b:e]
def subseq(s, b, e):
    result = [ s[x] for x in {b..e-1} ]

def append(s, e):
    result = s + [e,]

def head(s):
    result = s[0]

builtin tail "list$tail"
def tail(s):
    result = subseq(s, 1, len(s))

# sum of a list or set
def sum(a):
    result = 0
    for v in a:
        result += v

# convert list (or values of a dict) to a set
def set(a):
    result = { v for v in a }

# convert set into a (sorted) list
def list(a):
    result = [ v for v in a ]

# convert values of a dictionary into a list
def values(d):
    result = [ v for _:v in d ]

# like Python .items()
def items(d):
    result = [ (k, v) for k:v in d ]

# quicksort of a list
def qsort(a):
    if a == []:
        result = []
    else:
        let (pivot, rest) = head(a), tail(a)
        let lower = [ v for v in rest where v < pivot ]
        let higher = [ v for v in rest where v >= pivot ]:
            result = qsort(lower) + [pivot,] + qsort(higher)

# like Python sorted()
def sorted(d):
    result = qsort(list(d))

# like Python reversed()
def reversed(d):
    let n = len(d):
        result = [ d[n-i] for i in { 1..n } ]
