# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/entity/organization_member.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from layerapi.api.entity import layer_organization_role_pb2 as api_dot_entity_dot_layer__organization__role__pb2
from layerapi.api.entity import user_pb2 as api_dot_entity_dot_user__pb2
from layerapi.validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$api/entity/organization_member.proto\x12\x03\x61pi\x1a(api/entity/layer_organization_role.proto\x1a\x15\x61pi/entity/user.proto\x1a\x17validate/validate.proto\"a\n\x12OrganizationMember\x12!\n\x04user\x18\x01 \x01(\x0b\x32\t.api.UserB\x08\xfa\x42\x05\x8a\x01\x02\x10\x01\x12(\n\x04role\x18\x02 \x01(\x0e\x32\x1a.api.LayerOrganizationRoleB\x11\n\rcom.layer.apiP\x01\x62\x06proto3')



_ORGANIZATIONMEMBER = DESCRIPTOR.message_types_by_name['OrganizationMember']
OrganizationMember = _reflection.GeneratedProtocolMessageType('OrganizationMember', (_message.Message,), {
  'DESCRIPTOR' : _ORGANIZATIONMEMBER,
  '__module__' : 'api.entity.organization_member_pb2'
  # @@protoc_insertion_point(class_scope:api.OrganizationMember)
  })
_sym_db.RegisterMessage(OrganizationMember)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\rcom.layer.apiP\001'
  _ORGANIZATIONMEMBER.fields_by_name['user']._options = None
  _ORGANIZATIONMEMBER.fields_by_name['user']._serialized_options = b'\372B\005\212\001\002\020\001'
  _ORGANIZATIONMEMBER._serialized_start=135
  _ORGANIZATIONMEMBER._serialized_end=232
# @@protoc_insertion_point(module_scope)
