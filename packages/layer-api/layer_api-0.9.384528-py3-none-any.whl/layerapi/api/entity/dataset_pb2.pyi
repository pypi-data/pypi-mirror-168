"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import layerapi.api.ids_pb2
import layerapi.api.value.python_dataset_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Dataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _DatasetType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DatasetTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Dataset._DatasetType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DATASET_TYPE_INVALID: Dataset._DatasetType.ValueType  # 0
        DATASET_TYPE_RAW: Dataset._DatasetType.ValueType  # 1
        DATASET_TYPE_PYTHON: Dataset._DatasetType.ValueType  # 2
    class DatasetType(_DatasetType, metaclass=_DatasetTypeEnumTypeWrapper):
        pass

    DATASET_TYPE_INVALID: Dataset.DatasetType.ValueType  # 0
    DATASET_TYPE_RAW: Dataset.DatasetType.ValueType  # 1
    DATASET_TYPE_PYTHON: Dataset.DatasetType.ValueType  # 2

    class OwnerList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        USER_IDS_FIELD_NUMBER: builtins.int
        GROUP_IDS_FIELD_NUMBER: builtins.int
        @property
        def user_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.ids_pb2.UserId]: ...
        @property
        def group_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.ids_pb2.GroupId]: ...
        def __init__(self,
            *,
            user_ids: typing.Optional[typing.Iterable[api.ids_pb2.UserId]] = ...,
            group_ids: typing.Optional[typing.Iterable[api.ids_pb2.GroupId]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["group_ids",b"group_ids","user_ids",b"user_ids"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    OWNERS_FIELD_NUMBER: builtins.int
    CREATED_BY_ID_FIELD_NUMBER: builtins.int
    CREATED_TIMESTAMP_FIELD_NUMBER: builtins.int
    UPDATED_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEFAULT_BUILD_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PYTHON_DATASET_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    PROJECT_NAME_FIELD_NUMBER: builtins.int
    LIKES_FIELD_NUMBER: builtins.int
    DOWNLOADS_FIELD_NUMBER: builtins.int
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> api.ids_pb2.DatasetId: ...
    name: typing.Text
    description: typing.Text
    format: typing.Text
    @property
    def owners(self) -> global___Dataset.OwnerList: ...
    @property
    def created_by_id(self) -> api.ids_pb2.UserId: ...
    created_timestamp: builtins.int
    updated_timestamp: builtins.int
    @property
    def default_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    type: global___Dataset.DatasetType.ValueType
    @property
    def python_dataset(self) -> api.value.python_dataset_pb2.PythonDataset: ...
    @property
    def project_id(self) -> api.ids_pb2.ProjectId: ...
    project_name: typing.Text
    likes: builtins.int
    downloads: builtins.int
    @property
    def account_id(self) -> api.ids_pb2.AccountId: ...
    def __init__(self,
        *,
        id: typing.Optional[api.ids_pb2.DatasetId] = ...,
        name: typing.Text = ...,
        description: typing.Text = ...,
        format: typing.Text = ...,
        owners: typing.Optional[global___Dataset.OwnerList] = ...,
        created_by_id: typing.Optional[api.ids_pb2.UserId] = ...,
        created_timestamp: builtins.int = ...,
        updated_timestamp: builtins.int = ...,
        default_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        type: global___Dataset.DatasetType.ValueType = ...,
        python_dataset: typing.Optional[api.value.python_dataset_pb2.PythonDataset] = ...,
        project_id: typing.Optional[api.ids_pb2.ProjectId] = ...,
        project_name: typing.Text = ...,
        likes: builtins.int = ...,
        downloads: builtins.int = ...,
        account_id: typing.Optional[api.ids_pb2.AccountId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["account_id",b"account_id","created_by_id",b"created_by_id","default_build_id",b"default_build_id","derived_dataset_build_details",b"derived_dataset_build_details","id",b"id","owners",b"owners","project_id",b"project_id","python_dataset",b"python_dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id",b"account_id","created_by_id",b"created_by_id","created_timestamp",b"created_timestamp","default_build_id",b"default_build_id","derived_dataset_build_details",b"derived_dataset_build_details","description",b"description","downloads",b"downloads","format",b"format","id",b"id","likes",b"likes","name",b"name","owners",b"owners","project_id",b"project_id","project_name",b"project_name","python_dataset",b"python_dataset","type",b"type","updated_timestamp",b"updated_timestamp"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["derived_dataset_build_details",b"derived_dataset_build_details"]) -> typing.Optional[typing_extensions.Literal["python_dataset"]]: ...
global___Dataset = Dataset
