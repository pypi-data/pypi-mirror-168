"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import layerapi.api.service.account.account_api_pb2
import grpc

class AccountAPIStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetAccounts: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetAccountsRequest,
        api.service.account.account_api_pb2.GetAccountsResponse]

    GetAccountViewByName: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetAccountViewByNameRequest,
        api.service.account.account_api_pb2.GetAccountViewByNameResponse]

    GetAccountViewById: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetAccountViewByIdRequest,
        api.service.account.account_api_pb2.GetAccountViewByIdResponse]

    GetAccountByName: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetAccountByNameRequest,
        api.service.account.account_api_pb2.GetAccountByNameResponse]

    GetAccountById: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetAccountByIdRequest,
        api.service.account.account_api_pb2.GetAccountByIdResponse]

    GetMyAccountView: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetMyAccountViewRequest,
        api.service.account.account_api_pb2.GetMyAccountViewResponse]

    CreateAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.CreateAccountRequest,
        api.service.account.account_api_pb2.CreateAccountResponse]

    UpdateAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.UpdateAccountRequest,
        api.service.account.account_api_pb2.UpdateAccountResponse]

    DeleteAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.DeleteAccountRequest,
        api.service.account.account_api_pb2.DeleteAccountResponse]

    DeleteAccountByName: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.DeleteAccountByNameRequest,
        api.service.account.account_api_pb2.DeleteAccountByNameResponse]

    CreateOrganizationAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.CreateOrganizationAccountRequest,
        api.service.account.account_api_pb2.CreateOrganizationAccountResponse]

    CreateApiKey: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.CreateApiKeyRequest,
        api.service.account.account_api_pb2.CreateApiKeyResponse]

    ToggleDatasetLikeByMyAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.ToggleDatasetLikeByMyAccountRequest,
        api.service.account.account_api_pb2.ToggleDatasetLikeByMyAccountResponse]

    GetDatasetLikedByMyAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetDatasetLikedByMyAccountRequest,
        api.service.account.account_api_pb2.GetDatasetLikedByMyAccountResponse]

    ToggleModelLikeByMyAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.ToggleModelLikeByMyAccountRequest,
        api.service.account.account_api_pb2.ToggleModelLikeByMyAccountResponse]

    GetModelLikedByMyAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetModelLikedByMyAccountRequest,
        api.service.account.account_api_pb2.GetModelLikedByMyAccountResponse]

    ToggleProjectLikeByMyAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.ToggleProjectLikeByMyAccountRequest,
        api.service.account.account_api_pb2.ToggleProjectLikeByMyAccountResponse]

    GetProjectLikedByMyAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetProjectLikedByMyAccountRequest,
        api.service.account.account_api_pb2.GetProjectLikedByMyAccountResponse]

    GetTierConfigByAccountId: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetTierConfigByAccountIdRequest,
        api.service.account.account_api_pb2.GetTierConfigByAccountIdResponse]

    CreateTierConfigByAccountId: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.CreateTierConfigByAccountIdRequest,
        api.service.account.account_api_pb2.CreateTierConfigByAccountIdResponse]

    AssignTierToAccount: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.AssignTierToAccountRequest,
        api.service.account.account_api_pb2.AssignTierToAccountResponse]

    GetTiers: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetTiersRequest,
        api.service.account.account_api_pb2.GetTiersResponse]

    GetPermissionBuckets: grpc.UnaryUnaryMultiCallable[
        api.service.account.account_api_pb2.GetPermissionBucketsRequest,
        api.service.account.account_api_pb2.GetPermissionBucketsResponse]


class AccountAPIServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetAccounts(self,
        request: api.service.account.account_api_pb2.GetAccountsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetAccountsResponse: ...

    @abc.abstractmethod
    def GetAccountViewByName(self,
        request: api.service.account.account_api_pb2.GetAccountViewByNameRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetAccountViewByNameResponse: ...

    @abc.abstractmethod
    def GetAccountViewById(self,
        request: api.service.account.account_api_pb2.GetAccountViewByIdRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetAccountViewByIdResponse: ...

    @abc.abstractmethod
    def GetAccountByName(self,
        request: api.service.account.account_api_pb2.GetAccountByNameRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetAccountByNameResponse: ...

    @abc.abstractmethod
    def GetAccountById(self,
        request: api.service.account.account_api_pb2.GetAccountByIdRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetAccountByIdResponse: ...

    @abc.abstractmethod
    def GetMyAccountView(self,
        request: api.service.account.account_api_pb2.GetMyAccountViewRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetMyAccountViewResponse: ...

    @abc.abstractmethod
    def CreateAccount(self,
        request: api.service.account.account_api_pb2.CreateAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.CreateAccountResponse: ...

    @abc.abstractmethod
    def UpdateAccount(self,
        request: api.service.account.account_api_pb2.UpdateAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.UpdateAccountResponse: ...

    @abc.abstractmethod
    def DeleteAccount(self,
        request: api.service.account.account_api_pb2.DeleteAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.DeleteAccountResponse: ...

    @abc.abstractmethod
    def DeleteAccountByName(self,
        request: api.service.account.account_api_pb2.DeleteAccountByNameRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.DeleteAccountByNameResponse: ...

    @abc.abstractmethod
    def CreateOrganizationAccount(self,
        request: api.service.account.account_api_pb2.CreateOrganizationAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.CreateOrganizationAccountResponse: ...

    @abc.abstractmethod
    def CreateApiKey(self,
        request: api.service.account.account_api_pb2.CreateApiKeyRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.CreateApiKeyResponse: ...

    @abc.abstractmethod
    def ToggleDatasetLikeByMyAccount(self,
        request: api.service.account.account_api_pb2.ToggleDatasetLikeByMyAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.ToggleDatasetLikeByMyAccountResponse: ...

    @abc.abstractmethod
    def GetDatasetLikedByMyAccount(self,
        request: api.service.account.account_api_pb2.GetDatasetLikedByMyAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetDatasetLikedByMyAccountResponse: ...

    @abc.abstractmethod
    def ToggleModelLikeByMyAccount(self,
        request: api.service.account.account_api_pb2.ToggleModelLikeByMyAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.ToggleModelLikeByMyAccountResponse: ...

    @abc.abstractmethod
    def GetModelLikedByMyAccount(self,
        request: api.service.account.account_api_pb2.GetModelLikedByMyAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetModelLikedByMyAccountResponse: ...

    @abc.abstractmethod
    def ToggleProjectLikeByMyAccount(self,
        request: api.service.account.account_api_pb2.ToggleProjectLikeByMyAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.ToggleProjectLikeByMyAccountResponse: ...

    @abc.abstractmethod
    def GetProjectLikedByMyAccount(self,
        request: api.service.account.account_api_pb2.GetProjectLikedByMyAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetProjectLikedByMyAccountResponse: ...

    @abc.abstractmethod
    def GetTierConfigByAccountId(self,
        request: api.service.account.account_api_pb2.GetTierConfigByAccountIdRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetTierConfigByAccountIdResponse: ...

    @abc.abstractmethod
    def CreateTierConfigByAccountId(self,
        request: api.service.account.account_api_pb2.CreateTierConfigByAccountIdRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.CreateTierConfigByAccountIdResponse: ...

    @abc.abstractmethod
    def AssignTierToAccount(self,
        request: api.service.account.account_api_pb2.AssignTierToAccountRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.AssignTierToAccountResponse: ...

    @abc.abstractmethod
    def GetTiers(self,
        request: api.service.account.account_api_pb2.GetTiersRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetTiersResponse: ...

    @abc.abstractmethod
    def GetPermissionBuckets(self,
        request: api.service.account.account_api_pb2.GetPermissionBucketsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.account_api_pb2.GetPermissionBucketsResponse: ...


def add_AccountAPIServicer_to_server(servicer: AccountAPIServicer, server: grpc.Server) -> None: ...
