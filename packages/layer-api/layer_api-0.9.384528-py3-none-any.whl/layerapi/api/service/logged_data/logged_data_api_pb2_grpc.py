# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from layerapi.api.service.logged_data import logged_data_api_pb2 as api_dot_service_dot_logged__data_dot_logged__data__api__pb2


class LoggedDataAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LogData = channel.unary_unary(
                '/api.LoggedDataAPI/LogData',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.LogDataRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.LogDataResponse.FromString,
                )
        self.GetLoggedDataByUniqueTag = channel.unary_unary(
                '/api.LoggedDataAPI/GetLoggedDataByUniqueTag',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByUniqueTagRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByUniqueTagResponse.FromString,
                )
        self.GetLoggedDataByRunId = channel.unary_unary(
                '/api.LoggedDataAPI/GetLoggedDataByRunId',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByRunIdRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByRunIdResponse.FromString,
                )
        self.GetLoggedDataByProjectId = channel.unary_unary(
                '/api.LoggedDataAPI/GetLoggedDataByProjectId',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByProjectIdRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByProjectIdResponse.FromString,
                )
        self.SetRunIdForEntityId = channel.unary_unary(
                '/api.LoggedDataAPI/SetRunIdForEntityId',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.SetRunIdForEntityIdRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.SetRunIdForEntityIdResponse.FromString,
                )
        self.GetAllLoggedData = channel.unary_unary(
                '/api.LoggedDataAPI/GetAllLoggedData',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetAllLoggedDataRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetAllLoggedDataResponse.FromString,
                )
        self.GetLoggedData = channel.unary_unary(
                '/api.LoggedDataAPI/GetLoggedData',
                request_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataRequest.SerializeToString,
                response_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataResponse.FromString,
                )


class LoggedDataAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LogData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoggedDataByUniqueTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoggedDataByRunId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoggedDataByProjectId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRunIdForEntityId(self, request, context):
        """temporary for the migration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllLoggedData(self, request, context):
        """deprecated below
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoggedData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoggedDataAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LogData': grpc.unary_unary_rpc_method_handler(
                    servicer.LogData,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.LogDataRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.LogDataResponse.SerializeToString,
            ),
            'GetLoggedDataByUniqueTag': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoggedDataByUniqueTag,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByUniqueTagRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByUniqueTagResponse.SerializeToString,
            ),
            'GetLoggedDataByRunId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoggedDataByRunId,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByRunIdRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByRunIdResponse.SerializeToString,
            ),
            'GetLoggedDataByProjectId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoggedDataByProjectId,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByProjectIdRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByProjectIdResponse.SerializeToString,
            ),
            'SetRunIdForEntityId': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRunIdForEntityId,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.SetRunIdForEntityIdRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.SetRunIdForEntityIdResponse.SerializeToString,
            ),
            'GetAllLoggedData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllLoggedData,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetAllLoggedDataRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetAllLoggedDataResponse.SerializeToString,
            ),
            'GetLoggedData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoggedData,
                    request_deserializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataRequest.FromString,
                    response_serializer=api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.LoggedDataAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LoggedDataAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LogData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/LogData',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.LogDataRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.LogDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoggedDataByUniqueTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/GetLoggedDataByUniqueTag',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByUniqueTagRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByUniqueTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoggedDataByRunId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/GetLoggedDataByRunId',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByRunIdRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByRunIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoggedDataByProjectId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/GetLoggedDataByProjectId',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByProjectIdRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataByProjectIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRunIdForEntityId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/SetRunIdForEntityId',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.SetRunIdForEntityIdRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.SetRunIdForEntityIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllLoggedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/GetAllLoggedData',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetAllLoggedDataRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetAllLoggedDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoggedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.LoggedDataAPI/GetLoggedData',
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataRequest.SerializeToString,
            api_dot_service_dot_logged__data_dot_logged__data__api__pb2.GetLoggedDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
