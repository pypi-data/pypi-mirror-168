"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DataTicket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FEATURE_PATH_TICKET_FIELD_NUMBER: builtins.int
    DATASET_PATH_TICKET_FIELD_NUMBER: builtins.int
    ROW_LIMIT_FIELD_NUMBER: builtins.int
    @property
    def feature_path_ticket(self) -> global___FeaturePathTicket: ...
    @property
    def dataset_path_ticket(self) -> global___DatasetPathTicket: ...
    @property
    def row_limit(self) -> global___RowLimit: ...
    def __init__(self,
        *,
        feature_path_ticket: typing.Optional[global___FeaturePathTicket] = ...,
        dataset_path_ticket: typing.Optional[global___DatasetPathTicket] = ...,
        row_limit: typing.Optional[global___RowLimit] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_path_ticket",b"dataset_path_ticket","feature_path_ticket",b"feature_path_ticket","row_limit",b"row_limit","ticket",b"ticket"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_path_ticket",b"dataset_path_ticket","feature_path_ticket",b"feature_path_ticket","row_limit",b"row_limit","ticket",b"ticket"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["ticket",b"ticket"]) -> typing.Optional[typing_extensions.Literal["feature_path_ticket","dataset_path_ticket"]]: ...
global___DataTicket = DataTicket

class FeaturePathTicket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FEATURE_PATHS_FIELD_NUMBER: builtins.int
    @property
    def feature_paths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        feature_paths: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feature_paths",b"feature_paths"]) -> None: ...
global___FeaturePathTicket = FeaturePathTicket

class DatasetPathTicket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PATH_FIELD_NUMBER: builtins.int
    path: typing.Text
    def __init__(self,
        *,
        path: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["path",b"path"]) -> None: ...
global___DatasetPathTicket = DatasetPathTicket

class RowLimit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(self,
        *,
        value: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...
global___RowLimit = RowLimit

class PartitionTicket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Format:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PartitionTicket._Format.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FORMAT_INVALID: PartitionTicket._Format.ValueType  # 0
        FORMAT_NATIVE: PartitionTicket._Format.ValueType  # 1
        FORMAT_PARQUET: PartitionTicket._Format.ValueType  # 2
    class Format(_Format, metaclass=_FormatEnumTypeWrapper):
        pass

    FORMAT_INVALID: PartitionTicket.Format.ValueType  # 0
    FORMAT_NATIVE: PartitionTicket.Format.ValueType  # 1
    FORMAT_PARQUET: PartitionTicket.Format.ValueType  # 2

    FORMAT_FIELD_NUMBER: builtins.int
    CHECKSUM_FIELD_NUMBER: builtins.int
    format: global___PartitionTicket.Format.ValueType
    checksum: typing.Text
    def __init__(self,
        *,
        format: global___PartitionTicket.Format.ValueType = ...,
        checksum: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["checksum",b"checksum","format",b"format"]) -> None: ...
global___PartitionTicket = PartitionTicket
