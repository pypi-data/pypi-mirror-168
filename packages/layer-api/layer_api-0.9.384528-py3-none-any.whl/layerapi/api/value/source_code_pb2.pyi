"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SourceCode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Language:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LanguageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SourceCode._Language.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LANGUAGE_INVALID: SourceCode._Language.ValueType  # 0
        LANGUAGE_PYTHON: SourceCode._Language.ValueType  # 1
        LANGUAGE_SCALA: SourceCode._Language.ValueType  # 2
    class Language(_Language, metaclass=_LanguageEnumTypeWrapper):
        pass

    LANGUAGE_INVALID: SourceCode.Language.ValueType  # 0
    LANGUAGE_PYTHON: SourceCode.Language.ValueType  # 1
    LANGUAGE_SCALA: SourceCode.Language.ValueType  # 2

    class LanguageVersion(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        MAJOR_FIELD_NUMBER: builtins.int
        MINOR_FIELD_NUMBER: builtins.int
        MICRO_FIELD_NUMBER: builtins.int
        major: builtins.int
        minor: builtins.int
        micro: builtins.int
        def __init__(self,
            *,
            major: builtins.int = ...,
            minor: builtins.int = ...,
            micro: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["major",b"major","micro",b"micro","minor",b"minor"]) -> None: ...

    LOCAL_FILE_SOURCE_FIELD_NUMBER: builtins.int
    REMOTE_FILE_LOCATION_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    LANGUAGE_VERSION_FIELD_NUMBER: builtins.int
    @property
    def local_file_source(self) -> global___LocalFileSource: ...
    @property
    def remote_file_location(self) -> global___RemoteFileLocation: ...
    language: global___SourceCode.Language.ValueType
    @property
    def language_version(self) -> global___SourceCode.LanguageVersion: ...
    def __init__(self,
        *,
        local_file_source: typing.Optional[global___LocalFileSource] = ...,
        remote_file_location: typing.Optional[global___RemoteFileLocation] = ...,
        language: global___SourceCode.Language.ValueType = ...,
        language_version: typing.Optional[global___SourceCode.LanguageVersion] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["language_version",b"language_version","local_file_source",b"local_file_source","remote_file_location",b"remote_file_location","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["language",b"language","language_version",b"language_version","local_file_source",b"local_file_source","remote_file_location",b"remote_file_location","source",b"source"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["local_file_source","remote_file_location"]]: ...
global___SourceCode = SourceCode

class LocalFileSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    name: typing.Text
    source: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        source: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","source",b"source"]) -> None: ...
global___LocalFileSource = LocalFileSource

class RemoteFileLocation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    name: typing.Text
    location: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        location: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["location",b"location","name",b"name"]) -> None: ...
global___RemoteFileLocation = RemoteFileLocation
