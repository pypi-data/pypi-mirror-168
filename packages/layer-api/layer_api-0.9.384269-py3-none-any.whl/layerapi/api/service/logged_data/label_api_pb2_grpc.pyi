"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import layerapi.api.service.logged_data.label_api_pb2
import grpc

class LabelAPIStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetProjectLabels: grpc.UnaryUnaryMultiCallable[
        api.service.logged_data.label_api_pb2.GetProjectLabelsRequest,
        api.service.logged_data.label_api_pb2.GetProjectLabelsResponse]

    AddLabelsToEntity: grpc.UnaryUnaryMultiCallable[
        api.service.logged_data.label_api_pb2.AddLabelsToEntityRequest,
        api.service.logged_data.label_api_pb2.AddLabelsToEntityResponse]
    """v1 using model train and dataset build ids directly like logged data v1"""

    RemoveLabelsFromEntity: grpc.UnaryUnaryMultiCallable[
        api.service.logged_data.label_api_pb2.RemoveLabelsFromEntityRequest,
        api.service.logged_data.label_api_pb2.RemoveLabelsFromEntityResponse]

    GetLabelsAttachedToEntity: grpc.UnaryUnaryMultiCallable[
        api.service.logged_data.label_api_pb2.GetLabelsAttachedToEntityRequest,
        api.service.logged_data.label_api_pb2.GetLabelsAttachedToEntityResponse]


class LabelAPIServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetProjectLabels(self,
        request: api.service.logged_data.label_api_pb2.GetProjectLabelsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.logged_data.label_api_pb2.GetProjectLabelsResponse: ...

    @abc.abstractmethod
    def AddLabelsToEntity(self,
        request: api.service.logged_data.label_api_pb2.AddLabelsToEntityRequest,
        context: grpc.ServicerContext,
    ) -> api.service.logged_data.label_api_pb2.AddLabelsToEntityResponse:
        """v1 using model train and dataset build ids directly like logged data v1"""
        pass

    @abc.abstractmethod
    def RemoveLabelsFromEntity(self,
        request: api.service.logged_data.label_api_pb2.RemoveLabelsFromEntityRequest,
        context: grpc.ServicerContext,
    ) -> api.service.logged_data.label_api_pb2.RemoveLabelsFromEntityResponse: ...

    @abc.abstractmethod
    def GetLabelsAttachedToEntity(self,
        request: api.service.logged_data.label_api_pb2.GetLabelsAttachedToEntityRequest,
        context: grpc.ServicerContext,
    ) -> api.service.logged_data.label_api_pb2.GetLabelsAttachedToEntityResponse: ...


def add_LabelAPIServicer_to_server(servicer: LabelAPIServicer, server: grpc.Server) -> None: ...
