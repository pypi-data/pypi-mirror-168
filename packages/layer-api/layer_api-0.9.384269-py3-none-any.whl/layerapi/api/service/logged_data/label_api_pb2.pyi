"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import layerapi.api.entity.label_pb2
import layerapi.api.ids_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetProjectLabelsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECT_ID_FIELD_NUMBER: builtins.int
    @property
    def project_id(self) -> api.ids_pb2.ProjectId: ...
    def __init__(self,
        *,
        project_id: typing.Optional[api.ids_pb2.ProjectId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["project_id",b"project_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_id",b"project_id"]) -> None: ...
global___GetProjectLabelsRequest = GetProjectLabelsRequest

class GetProjectLabelsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECT_ID_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    @property
    def project_id(self) -> api.ids_pb2.ProjectId: ...
    @property
    def label(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.entity.label_pb2.Label]: ...
    def __init__(self,
        *,
        project_id: typing.Optional[api.ids_pb2.ProjectId] = ...,
        label: typing.Optional[typing.Iterable[api.entity.label_pb2.Label]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["project_id",b"project_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label",b"label","project_id",b"project_id"]) -> None: ...
global___GetProjectLabelsResponse = GetProjectLabelsResponse

class AddLabelsToEntityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_TRAIN_ID_FIELD_NUMBER: builtins.int
    DATASET_BUILD_ID_FIELD_NUMBER: builtins.int
    LABEL_NAME_FIELD_NUMBER: builtins.int
    @property
    def model_train_id(self) -> api.ids_pb2.ModelTrainId: ...
    @property
    def dataset_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    @property
    def label_name(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        model_train_id: typing.Optional[api.ids_pb2.ModelTrainId] = ...,
        dataset_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        label_name: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","label_name",b"label_name","model_train_id",b"model_train_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity_id",b"entity_id"]) -> typing.Optional[typing_extensions.Literal["model_train_id","dataset_build_id"]]: ...
global___AddLabelsToEntityRequest = AddLabelsToEntityRequest

class AddLabelsToEntityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_TRAIN_ID_FIELD_NUMBER: builtins.int
    DATASET_BUILD_ID_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    @property
    def model_train_id(self) -> api.ids_pb2.ModelTrainId: ...
    @property
    def dataset_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    @property
    def label(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.entity.label_pb2.Label]: ...
    def __init__(self,
        *,
        model_train_id: typing.Optional[api.ids_pb2.ModelTrainId] = ...,
        dataset_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        label: typing.Optional[typing.Iterable[api.entity.label_pb2.Label]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","label",b"label","model_train_id",b"model_train_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity_id",b"entity_id"]) -> typing.Optional[typing_extensions.Literal["model_train_id","dataset_build_id"]]: ...
global___AddLabelsToEntityResponse = AddLabelsToEntityResponse

class RemoveLabelsFromEntityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_TRAIN_ID_FIELD_NUMBER: builtins.int
    DATASET_BUILD_ID_FIELD_NUMBER: builtins.int
    LABEL_NAME_FIELD_NUMBER: builtins.int
    @property
    def model_train_id(self) -> api.ids_pb2.ModelTrainId: ...
    @property
    def dataset_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    @property
    def label_name(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        model_train_id: typing.Optional[api.ids_pb2.ModelTrainId] = ...,
        dataset_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        label_name: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","label_name",b"label_name","model_train_id",b"model_train_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity_id",b"entity_id"]) -> typing.Optional[typing_extensions.Literal["model_train_id","dataset_build_id"]]: ...
global___RemoveLabelsFromEntityRequest = RemoveLabelsFromEntityRequest

class RemoveLabelsFromEntityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_TRAIN_ID_FIELD_NUMBER: builtins.int
    DATASET_BUILD_ID_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    @property
    def model_train_id(self) -> api.ids_pb2.ModelTrainId: ...
    @property
    def dataset_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    @property
    def label(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.entity.label_pb2.Label]: ...
    def __init__(self,
        *,
        model_train_id: typing.Optional[api.ids_pb2.ModelTrainId] = ...,
        dataset_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        label: typing.Optional[typing.Iterable[api.entity.label_pb2.Label]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","label",b"label","model_train_id",b"model_train_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity_id",b"entity_id"]) -> typing.Optional[typing_extensions.Literal["model_train_id","dataset_build_id"]]: ...
global___RemoveLabelsFromEntityResponse = RemoveLabelsFromEntityResponse

class GetLabelsAttachedToEntityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_TRAIN_ID_FIELD_NUMBER: builtins.int
    DATASET_BUILD_ID_FIELD_NUMBER: builtins.int
    @property
    def model_train_id(self) -> api.ids_pb2.ModelTrainId: ...
    @property
    def dataset_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    def __init__(self,
        *,
        model_train_id: typing.Optional[api.ids_pb2.ModelTrainId] = ...,
        dataset_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity_id",b"entity_id"]) -> typing.Optional[typing_extensions.Literal["model_train_id","dataset_build_id"]]: ...
global___GetLabelsAttachedToEntityRequest = GetLabelsAttachedToEntityRequest

class GetLabelsAttachedToEntityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_TRAIN_ID_FIELD_NUMBER: builtins.int
    DATASET_BUILD_ID_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    @property
    def model_train_id(self) -> api.ids_pb2.ModelTrainId: ...
    @property
    def dataset_build_id(self) -> api.ids_pb2.DatasetBuildId: ...
    @property
    def label(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.entity.label_pb2.Label]: ...
    def __init__(self,
        *,
        model_train_id: typing.Optional[api.ids_pb2.ModelTrainId] = ...,
        dataset_build_id: typing.Optional[api.ids_pb2.DatasetBuildId] = ...,
        label: typing.Optional[typing.Iterable[api.entity.label_pb2.Label]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","model_train_id",b"model_train_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_build_id",b"dataset_build_id","entity_id",b"entity_id","label",b"label","model_train_id",b"model_train_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity_id",b"entity_id"]) -> typing.Optional[typing_extensions.Literal["model_train_id","dataset_build_id"]]: ...
global___GetLabelsAttachedToEntityResponse = GetLabelsAttachedToEntityResponse
