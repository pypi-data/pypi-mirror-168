"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import layerapi.api.ids_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ComputeFabric(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ResourceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ResourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ComputeFabric._ResourceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        RESOURCE_TYPE_INVALID: ComputeFabric._ResourceType.ValueType  # 0
        RESOURCE_TYPE_CPU: ComputeFabric._ResourceType.ValueType  # 1
        RESOURCE_TYPE_GPU: ComputeFabric._ResourceType.ValueType  # 2
    class ResourceType(_ResourceType, metaclass=_ResourceTypeEnumTypeWrapper):
        pass

    RESOURCE_TYPE_INVALID: ComputeFabric.ResourceType.ValueType  # 0
    RESOURCE_TYPE_CPU: ComputeFabric.ResourceType.ValueType  # 1
    RESOURCE_TYPE_GPU: ComputeFabric.ResourceType.ValueType  # 2

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> api.ids_pb2.ComputeFabricId: ...
    name: typing.Text
    resource_type: global___ComputeFabric.ResourceType.ValueType
    def __init__(self,
        *,
        id: typing.Optional[api.ids_pb2.ComputeFabricId] = ...,
        name: typing.Text = ...,
        resource_type: global___ComputeFabric.ResourceType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","resource_type",b"resource_type"]) -> None: ...
global___ComputeFabric = ComputeFabric
