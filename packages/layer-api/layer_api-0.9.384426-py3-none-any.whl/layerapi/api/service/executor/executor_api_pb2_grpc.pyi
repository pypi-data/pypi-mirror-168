"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import layerapi.api.service.executor.executor_api_pb2
import grpc

class ExecutorAPIStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetFunctionUploadPath: grpc.UnaryUnaryMultiCallable[
        api.service.executor.executor_api_pb2.GetFunctionUploadPathRequest,
        api.service.executor.executor_api_pb2.GetFunctionUploadPathResponse]

    GetFunctionDownloadPath: grpc.UnaryUnaryMultiCallable[
        api.service.executor.executor_api_pb2.GetFunctionDownloadPathRequest,
        api.service.executor.executor_api_pb2.GetFunctionDownloadPathResponse]

    Execute: grpc.UnaryUnaryMultiCallable[
        api.service.executor.executor_api_pb2.ExecuteRequest,
        api.service.executor.executor_api_pb2.ExecuteResponse]

    CheckStatus: grpc.UnaryUnaryMultiCallable[
        api.service.executor.executor_api_pb2.CheckStatusRequest,
        api.service.executor.executor_api_pb2.CheckStatusResponse]

    GetOrCreateCluster: grpc.UnaryUnaryMultiCallable[
        api.service.executor.executor_api_pb2.GetOrCreateClusterRequest,
        api.service.executor.executor_api_pb2.GetOrCreateClusterResponse]


class ExecutorAPIServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetFunctionUploadPath(self,
        request: api.service.executor.executor_api_pb2.GetFunctionUploadPathRequest,
        context: grpc.ServicerContext,
    ) -> api.service.executor.executor_api_pb2.GetFunctionUploadPathResponse: ...

    @abc.abstractmethod
    def GetFunctionDownloadPath(self,
        request: api.service.executor.executor_api_pb2.GetFunctionDownloadPathRequest,
        context: grpc.ServicerContext,
    ) -> api.service.executor.executor_api_pb2.GetFunctionDownloadPathResponse: ...

    @abc.abstractmethod
    def Execute(self,
        request: api.service.executor.executor_api_pb2.ExecuteRequest,
        context: grpc.ServicerContext,
    ) -> api.service.executor.executor_api_pb2.ExecuteResponse: ...

    @abc.abstractmethod
    def CheckStatus(self,
        request: api.service.executor.executor_api_pb2.CheckStatusRequest,
        context: grpc.ServicerContext,
    ) -> api.service.executor.executor_api_pb2.CheckStatusResponse: ...

    @abc.abstractmethod
    def GetOrCreateCluster(self,
        request: api.service.executor.executor_api_pb2.GetOrCreateClusterRequest,
        context: grpc.ServicerContext,
    ) -> api.service.executor.executor_api_pb2.GetOrCreateClusterResponse: ...


def add_ExecutorAPIServicer_to_server(servicer: ExecutorAPIServicer, server: grpc.Server) -> None: ...
