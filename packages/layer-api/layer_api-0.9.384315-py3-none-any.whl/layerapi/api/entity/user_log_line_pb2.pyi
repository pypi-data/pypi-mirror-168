"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class UserLogLine(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _TaskType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[UserLogLine._TaskType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TASK_TYPE_INVALID: UserLogLine._TaskType.ValueType  # 0
        TASK_TYPE_DEPRECATED: UserLogLine._TaskType.ValueType  # 1
        TASK_TYPE_MODEL_TRAIN: UserLogLine._TaskType.ValueType  # 3
        TASK_TYPE_DATASET_BUILD: UserLogLine._TaskType.ValueType  # 4
    class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper):
        pass

    TASK_TYPE_INVALID: UserLogLine.TaskType.ValueType  # 0
    TASK_TYPE_DEPRECATED: UserLogLine.TaskType.ValueType  # 1
    TASK_TYPE_MODEL_TRAIN: UserLogLine.TaskType.ValueType  # 3
    TASK_TYPE_DATASET_BUILD: UserLogLine.TaskType.ValueType  # 4

    ENTITY_NAME_FIELD_NUMBER: builtins.int
    HOST_NAME_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    LOG_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    entity_name: typing.Text
    host_name: typing.Text
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    log: typing.Text
    type: global___UserLogLine.TaskType.ValueType
    def __init__(self,
        *,
        entity_name: typing.Text = ...,
        host_name: typing.Text = ...,
        time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        log: typing.Text = ...,
        type: global___UserLogLine.TaskType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity_name",b"entity_name","host_name",b"host_name","log",b"log","time",b"time","type",b"type"]) -> None: ...
global___UserLogLine = UserLogLine
