"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SchemaColumn(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _DataType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SchemaColumn._DataType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DATA_TYPE_INVALID: SchemaColumn._DataType.ValueType  # 0
        DATA_TYPE_BOOLEAN: SchemaColumn._DataType.ValueType  # 1
        """Mapping to mlflow.types.schema.DataType"""

        DATA_TYPE_INTEGER: SchemaColumn._DataType.ValueType  # 2
        DATA_TYPE_LONG: SchemaColumn._DataType.ValueType  # 3
        DATA_TYPE_FLOAT: SchemaColumn._DataType.ValueType  # 4
        DATA_TYPE_DOUBLE: SchemaColumn._DataType.ValueType  # 5
        DATA_TYPE_STRING: SchemaColumn._DataType.ValueType  # 6
        DATA_TYPE_BINARY: SchemaColumn._DataType.ValueType  # 7
    class DataType(_DataType, metaclass=_DataTypeEnumTypeWrapper):
        pass

    DATA_TYPE_INVALID: SchemaColumn.DataType.ValueType  # 0
    DATA_TYPE_BOOLEAN: SchemaColumn.DataType.ValueType  # 1
    """Mapping to mlflow.types.schema.DataType"""

    DATA_TYPE_INTEGER: SchemaColumn.DataType.ValueType  # 2
    DATA_TYPE_LONG: SchemaColumn.DataType.ValueType  # 3
    DATA_TYPE_FLOAT: SchemaColumn.DataType.ValueType  # 4
    DATA_TYPE_DOUBLE: SchemaColumn.DataType.ValueType  # 5
    DATA_TYPE_STRING: SchemaColumn.DataType.ValueType  # 6
    DATA_TYPE_BINARY: SchemaColumn.DataType.ValueType  # 7

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text
    description: typing.Text
    type: global___SchemaColumn.DataType.ValueType
    def __init__(self,
        *,
        name: typing.Text = ...,
        description: typing.Text = ...,
        type: global___SchemaColumn.DataType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","name",b"name","type",b"type"]) -> None: ...
global___SchemaColumn = SchemaColumn
