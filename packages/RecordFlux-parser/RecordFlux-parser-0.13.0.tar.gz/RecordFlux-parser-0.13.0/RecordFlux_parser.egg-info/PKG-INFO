Metadata-Version: 2.1
Name: RecordFlux-parser
Version: 0.13.0
Summary: RecordFlux parser
Home-page: https://github.com/Componolit/RecordFlux-parser
Author: Alexander Senier
Author-email: senier@componolit.com
License: AGPL-3.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Ada
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Communications
Classifier: Topic :: Security
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: System :: Networking
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# RecordFlux Parser

This is the parser for the [RecordFlux](https://github.com/Componolit/RecordFlux) language which is based on [Langkit](https://github.com/AdaCore/langkit).

## Development

As a prerequisite to build the parser, the following dependencies need to be installed:

- [GNAT Community Edition](https://www.adacore.com/download) >= 2020
- [GNU MP Arithmetic Library](https://gmplib.org/) This is provided as a package for various distributions e.g. libgmp-dev (Debian/Ubuntu), gmp-devel (Fedora) or gmp (Arch Linux).

**Note**: GNAT must be added to the PATH environment variable after installation: `export PATH=<GNAT-directory>/bin:$PATH`.

To run the tests, the RecordFlux parser package and its dependencies must be installed. Use the respective make target:

```Console
$ make install_devel
```

**Note:** Develop mode of setuptools (`pip -e`) is unsupported. The parser must be reinstalled before changes to the code take effect.

All checks and tests can be executed at once with `make` or individually with `make check` or `make test`.
