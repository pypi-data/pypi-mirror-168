cmake_minimum_required(VERSION 3.12.0)

cmake_policy(SET CMP0054 NEW)
set(SKBUILD_LINK_LIBRARIES_KEYWORD PRIVATE)

set(THREADS_PREFER_PTHREAD_FLAG ON)
if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    set(CMAKE_OSX_DEPLOYMENT_TARGET "10.9" CACHE STRING "Minimum OS X deployment version")
endif()

project(rapidfuzz LANGUAGES C CXX)

if (MSVC)
    add_compile_options(/W4 /bigobj)
else()
    add_compile_options(-Wall -Wextra -pedantic)
endif()

find_package(PythonExtensions REQUIRED)
find_package(Python COMPONENTS Interpreter Development)
include(FetchContent)

set(RF_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)

find_package(Taskflow 3.0.0 QUIET)
if (Taskflow_FOUND)
    message("Using system supplied version of Taskflow")
else()
    message("Using packaged version of Taskflow")
    set(TF_BUILD_CUDA OFF CACHE BOOL "Enables build of CUDA code")
    set(TF_BUILD_TESTS OFF CACHE BOOL "Enables build of tests")
    set(TF_BUILD_EXAMPLES OFF CACHE BOOL "Enables build of examples")
    add_subdirectory(extern/taskflow EXCLUDE_FROM_ALL)
    add_library(Taskflow::Taskflow ALIAS Taskflow)
endif()

find_package(rapidfuzz 1.7.0 QUIET)
if (rapidfuzz_FOUND)
    message("Using system supplied version of rapidfuzz-cpp")
else()
    message("Using packaged version of rapidfuzz-cpp")
    add_subdirectory(extern/rapidfuzz-cpp)
endif()

add_subdirectory(src/rapidfuzz)
add_subdirectory(src/rapidfuzz/distance)
