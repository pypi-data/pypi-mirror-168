{
  "outputs": {
    "trapE":"ADC", "triE":"ADC", "bl":"ADC", "bl_sig":"ADC", "A_10":"ADC", "AoE":"ADC", "dcr": "ADC"
  },
  "processors":{
    "bl, bl_sig":{
      "function": "mean_stdev",
      "module": "pygama.dsp.processors",
      "args" : ["wf[0:1000]", "bl", "bl_sig"],
      "unit": ["ADC", "ADC"]
    },
    "wf_blsub":{
      "function": "subtract",
      "module": "numpy",
      "args": ["wf", "bl", "wf_blsub"]
    },
    "wf_pz": {
      "function": "pole_zero",
      "module": "pygama.dsp.processors",
      "args":["wf_blsub", "70*us", "wf_pz"]
    },
    "wf_trap": {
      "function": "trap_norm",
      "module": "pygama.dsp.processors",
      "args": ["wf_pz", "10*us", "5*us", "wf_trap"]
    },
    "wf_triangle": {
      "function": "trap_norm",
      "module": "pygama.dsp.processors",
      "args": ["wf_pz", "100*us", "10*us", "wf_triangle"]
    },
    "wf_atrap": {
      "function": "asymTrapFilter",
      "module": "pygama.dsp.processors",
      "args": ["wf_pz", "0.05*us", "2*us", "3*us", "wf_atrap"]
    },
    "tp_0": {
      "function": "time_point_thresh",
      "module": "pygama.dsp.processors",
      "args": ["wf_atrap[0:2000]", 0, "tp_0"]
     },
     "trapEftp": {
       "function": "fixed_time_pickoff",
       "module": "pygama.dsp.processors",
       "args": ["wf_trap", "tp_0+(5*us+9*us)", "trapEftp"]
     },
     "dcr_unnorm": {
       "function": "trap_pickoff",
       "module": "pygama.dsp.processors",
       "args": ["wf_pz", 200, 1000, "tp_0+1.5*us", "dcr_unnorm"]
     },
     "dcr": {
       "function": "divide",
       "module": "numpy",
       "args": ["dcr_unnorm", "trapEftp", "dcr"]
     },
    "trapE": {
      "function": "amax",
      "module": "numpy",
      "args": ["wf_trap", 1, "trapE"],
      "kwargs": {"signature":"(n),()->()", "types":["fi->f"]}
    },
    "triE": {
      "function": "amax",
      "module": "numpy",
      "args": ["wf_triangle", 1, "triE"],
      "kwargs": {"signature":"(n),()->()", "types":["fi->f"]}
    },
    "curr": {
      "function": "avg_current",
      "module": "pygama.dsp.processors",
      "args": ["wf_pz", 10, "curr(len(wf_pz)-10, f)"]
    },
    "A_10": {
      "function": "amax",
      "module": "numpy",
      "args": ["curr", 1, "A_10"],
      "kwargs": {"signature":"(n),()->()", "types":["fi->f"]},
      "unit": "ADC"
    },
    "AoE": {
      "function": "divide",
      "module": "numpy",
      "args":["A_10", "trapE", "AoE"],
      "unit": "ADC"
    }
  }
  
}
